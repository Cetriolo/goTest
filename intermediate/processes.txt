package main

import (
	"fmt"
	"os/exec"
)

// func main() {

// 	cmd := exec.Command("echo", "Hello, World!")
// 	output, err := cmd.Output()
// 	if err != nil {
// 		panic(err)
// 	}
// 	println(string(output))
// }

func main() {

	// cmd := exec.Command("grep", "foo")

	// reader := strings.NewReader("food\nbar\nbaz\n")
	// cmd.Stdin = reader

	// output, err := cmd.Output()
	// if err != nil {
	// 	panic(err)
	// }

	// println(string(output))

	// cmd := exec.Command("sleep", "60")

	// err := cmd.Start()

	// if err != nil {
	// 	panic(err)
	// }
	// time.Sleep(2 * time.Second)
	// err = cmd.Process.Kill()
	// fmt.Println("Killed process:", cmd.Process.Pid)
	// // Wait for the command to finish
	// // err = cmd.Wait()
	// if err != nil {
	// 	panic(err)
	// cmd := exec.Command("printenv", "SHELL")
	// output, err := cmd.Output()
	// if err != nil {
	// 	panic(err)
	// }
	// fmt.Println("SHELL:", string(output))

	// pr, pw := io.Pipe()

	// cmd := exec.Command("grep", "foo")

	// cmd.Stdin = pr
	// go func() {
	// 	defer pw.Close()
	// 	pw.Write([]byte("food\nbar\nbaz\n"))
	// }()

	// output, err := cmd.Output()
	// if err != nil {
	// 	panic(err)
	// }
	// fmt.Println("Grep output:", string(output))

	cmd := exec.Command("ls", "-l")
	output, err := cmd.CombinedOutput()
	if err != nil {
		panic(err)
	}
	fmt.Println("LS output:", string(output))

}
