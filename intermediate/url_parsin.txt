package main

import (
	"fmt"
	"log"
	"net/url"
)

func main() {
	// [scheme://][userinfo@][host][:port][/path][?query][#fragment]

	// Example URL: https://user:pass@www.example.com:8080/path/to/resource?query=param#fragment

	rawUrl := "https://example.com:8080/path?query=param#fragment"

	parsedUrl, err := url.Parse(rawUrl)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("Scheme:", parsedUrl.Scheme)
	fmt.Println("User:", parsedUrl.User)
	fmt.Println("Host:", parsedUrl.Host)
	fmt.Println("Path:", parsedUrl.Path)
	fmt.Println("Query:", parsedUrl.RawQuery)
	fmt.Println("Fragment:", parsedUrl.Fragment)

	rawUrl1 := "https://example.com/path?name=John&age=30"

	parsedUrl1, err := url.Parse(rawUrl1)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("Scheme:", parsedUrl1.Scheme)
	fmt.Println("User:", parsedUrl1.User)
	fmt.Println("Host:", parsedUrl1.Host)
	fmt.Println("Path:", parsedUrl1.Path)
	fmt.Println("Query:", parsedUrl1.RawQuery)
	fmt.Println("Fragment:", parsedUrl1.Fragment)
	fmt.Printf("name : %s", parsedUrl1.Query().Get("name"))
	fmt.Printf("age : %s\n", parsedUrl1.Query().Get("age"))

	// You can also access the query parameters
	queryParams := parsedUrl1.Query()
	for key, values := range queryParams {
		fmt.Println("Query Parameter:", key, "=", values)
	}

	baseUrl := &url.URL{
		Scheme: "https",
		Host:   "example.com",
		Path:   "/path",
		RawQuery: url.Values{
			"name": {"John"},
			"age":  {"30"},
		}.Encode(),
	}

	query := baseUrl.Query()
	query.Set("name", "aaa")
	query.Set("age", "33")

	baseUrl.RawQuery = query.Encode()

	fmt.Println("Built URL:", baseUrl.String())

	values := url.Values{}

	values.Add("name", "James")
	values.Add("age", "12")
	values.Add("city", "london")
	values.Add("country", "UK")

	encodedQuery := values.Encode()

	fmt.Println("Encoded Query String:", encodedQuery)

	baseURL2 := "https://example.com/path?"
	fullURL := baseURL2 + encodedQuery
	fmt.Println("Full URL with Query String:", fullURL)

}
